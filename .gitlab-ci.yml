image: docker:latest
services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay
  SPRING_PROFILES_ACTIVE: gitlab-ci

# These are the default stages.
# You don't need to explicitly define them.
# But you could define any stages you want.
stages:
  - build
  - test
  - package
  - deploy

# This is the name of the job.
# You can choose it freely.
maven-build:
  image: maven:3-jdk-8
  stage: build
  script:
    - echo "Building project with maven"
    - "mvn package -B"
  artifacts:
    paths:
      - target/*.jar

  # A job is always executed within a stage.
  # If no stage is set, it defaults to 'test'.
  stage: test
  # Since we require Maven for this job,
  # we can restrict the job to runners with a certain tag.
  # Of course, it is our duty to actually configure a runner
  # with the tag 'maven' and a working maven installation
  #tags:
  #  - maven
  # Here you can execute arbitrate terminal commands.
  # If any of the commands returns a non zero exit code the job fails.
  script:
    - mvn verify

#docker-build:
 # stage: package
  #script:
  #- docker build -t registry.gitlab.com/marcolenzo/actuator-sample .
  #- docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
  #- docker push registry.gitlab.com/marcolenzo/actuator-sample
